# Generated by Django 4.0.6 on 2023-03-25 14:48

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComparisonQuestion',
            fields=[
                ('header', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Вопрос с сопоставлением ответов',
                'verbose_name_plural': 'Вопросы с сопоставлением ответов',
            },
        ),
        migrations.CreateModel(
            name='ComparisonQuestionOption',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('right_answer_points', models.SmallIntegerField(null=True)),
            ],
            options={
                'verbose_name': 'Опция вопроса с сопоставлением ответа',
                'verbose_name_plural': 'Опции вопроса с сопоставлением ответа',
            },
        ),
        migrations.CreateModel(
            name='ComparisonQuestionOptionAnswer',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.comparisonquestion')),
            ],
            options={
                'verbose_name': 'Ответ на опцию вопроса с сопоставлением',
                'verbose_name_plural': 'Ответы на опцию вопроса с сопоставлением',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Экзамен',
                'verbose_name_plural': 'Экзамены',
            },
        ),
        migrations.CreateModel(
            name='OrdinaryQuestion',
            fields=[
                ('header', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('right_answer_points', models.SmallIntegerField(null=True)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.exam')),
            ],
            options={
                'verbose_name': 'Вопрос с одним вариантом ответа',
                'verbose_name_plural': 'Вопросы с одним вариантом ответа',
            },
        ),
        migrations.CreateModel(
            name='OrdinaryQuestionAnswer',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('is_correct', models.BooleanField()),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.ordinaryquestion')),
            ],
            options={
                'verbose_name': 'Ответ на вопрос с одним вариантом ответа',
                'verbose_name_plural': 'Ответы на вопрос с одним вариантом ответа',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Образовательное учреждение',
                'verbose_name_plural': 'Образовательные учреждения',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.school')),
            ],
            options={
                'verbose_name': 'Дисциплина',
                'verbose_name_plural': 'Дисциплины',
            },
        ),
        migrations.CreateModel(
            name='StudentExam',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_name', models.CharField(default='', max_length=100)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.exam')),
            ],
            options={
                'verbose_name': 'Экзамен студента',
                'verbose_name_plural': 'Экзамены студента',
            },
        ),
        migrations.CreateModel(
            name='OrdinaryQuestionUserAnswer',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.ordinaryquestionanswer')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.ordinaryquestion')),
                ('student_exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.studentexam')),
            ],
            options={
                'verbose_name': 'Ответ пользователя на вопрос с одним вариантом ответа',
                'verbose_name_plural': 'Ответы пользователя на вопрос с одним вариантом ответа',
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.subject'),
        ),
        migrations.CreateModel(
            name='ComparisonQuestionUserAnswer',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('option', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.comparisonquestionoption')),
                ('option_answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.comparisonquestionoptionanswer')),
                ('student_exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.studentexam')),
            ],
            options={
                'verbose_name': 'Ответ пользователя на вопрос с сопоставлением ответов',
                'verbose_name_plural': 'Ответы пользователя на вопрос с сопоставлением ответов',
            },
        ),
        migrations.AddField(
            model_name='comparisonquestionoption',
            name='option_answer',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.comparisonquestionoptionanswer'),
        ),
        migrations.AddField(
            model_name='comparisonquestionoption',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.comparisonquestion'),
        ),
        migrations.AddField(
            model_name='comparisonquestion',
            name='exam',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.exam'),
        ),
    ]
